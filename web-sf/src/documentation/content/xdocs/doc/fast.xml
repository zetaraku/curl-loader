<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "http://apache.org/forrest/dtd/document-v12.dtd">
<document> 
  <header> 
  <title>Fast Start Instructions.</title>
  </header> 
  <body> 
  <p>
    BUILDING CURL-LOADER.
  </p>
        Build it using general C development environment with bash, 
        gcc compiler (3 or 4 series), make, etc on a linux machine.<br/>
        <br/>
        Building pre-requirements are:<br/>
          1. openssl binaries;<br/>
          2. openssl development package with include files (on debian package libssl-dev);<br/>
         <br/>
         Adjust Makefile variables to point to the openssl headers and libraries. 
         If you want to specify an openssl development directory with include 
         files (e.g. crypto.h), export environment variable OPENSSLDIR with 
         the value of that directory.<br/>
         For example: $export OPENSSLDIR=the-full-path-to-the-directory<br/>
         <br/>
         Run the following commands from your bash linux shell:<br/>
         $tar zxfv curl-loader-&lt;version&gt;.tar.gz<br/>
         $cd curl-loader-&lt;version&gt;<br/>
         $make<br/>
         <br/>
         By default, we are building both libcurl and curl-loader without optimization and with
         debugging -g option. To build with optimization and without debugging, please, run:<br/>
         $make cleanall<br/>
         $make optimize=1 debug=0<br/>
        <br/>
         Optionally, you can run as a root:<br/>
         #make install<br/>
         and enjoy our man pages by $man curl-loader and $man curl-loader-config.<br/>
         <br/>
         A known building issue is libidn.so, which means, that some linux distributions 
         do have some libidn.so.11 or libidn.so.10, but not libidn.so, and it breaks linking. 
         Resolve the issue by creating a softlink:<br/>
         <br/>
         #cd to the directory, where e.g. libidn.so.11 is installed and run<br/>
         #ln -s libidn.so.11 libidn.so<br/>
         <br/>
         If the above was not helpful, try editing the Makefile and removing -lidn from the linking string.<br/>
        <br/>
        If still any building issues, please, fill you free to contact us for assistance.<br/>
         <br/>
      <p>
       LOADING CONFIGURATION.
      </p>
        To run the load create a configuration file to be passed to
         curl-loader by the -f commmand line option, e.g.<br/>
         #curl-loader -f ./conf-examples/bulk.conf<br/>
        <br/>
        For more examples, please, look at the files in "conf-examples" directory. You may 
        copy an example file and edit it.<br/>
       <p>
    ENVIRONMENT AND SYSTEM.
      </p>
      Running hundreds and thousands of clients, please, do not forget:<br/>
        - to increase limit of descriptors (sockets) by running e.g. <br/>
           #ulimit -n 10000;<br/>
        - optionally, to set reuse of sockets in time-wait state: by setting <br/>
            #echo 1 > /proc/sys/net/ipv4/tcp_tw_recycle and/or<br/> 
           #echo 1 > /proc/sys/net/ipv4/tcp_tw_reuse;<br/>
       <br/>
     In some cases you may need to increase the system limits for open
     descriptors (sockets).<br/>
       <br/>
       <p>
         USAGE:
      </p>
        run as a root user:<br/>
        #./curl-loader -f &lt;configuration filename&gt; [other options]<br/>
        <br/>
        If curl-loader on start reports any problems with your configuration file,
        please, "don't panic" - fix the problems.<br/>
        For more details, please, look into the FAQs page.<br/>
       <br/>
  </body>
</document>
