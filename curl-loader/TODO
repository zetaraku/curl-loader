1/11/2006

1. Menu interface to configure testing conf-file. Dialog-like interface
   may be a good option. There are several requests for that, particularly
   from QA/validation people.

2. Enhancement of statistics for loading/testing:

SIPP provides a useful console output with the loading scenario presentation
and updatable "running counters". Worth using this approach to present
load scenario and major statistics counters. Statistics may be also outputted
to an ASCII text file with separators ready for import to Excel. Detailed info
about errors may be presented in browsable html format.

We should support options to make:
- no statistics;
- minimal set of statistics, TBD;
- all statistics;

Question 1: whether to count SSL handshake time for HTTPS;
Question 2: resolving time;


3. Configuration/making improvements starting from moving all source-files
to src directory etc

Making to perform unified build for all major libraries, like libcurl, libcares.
 
make <option> to support as options:

debug=1, 0, default is 0 - no debugging symbols;
opt=1, 0, default is 1 - build with optimization;
profile=1,0, default is 0 - build without profiling -pg option
resolver=no, global, cares, default is no. If "global" (global DNS cache) enabled,
                prevent usage with -t (threads) option.

4. The problem of the both loading modes is that all clients are starting
loading immediately. It should be an option to configure calls-per-second
number (CAPS), and enable a gradual loading, lets say 200 clients start
loading each second, etc

5. The problem of the smooth mode is that it loads url after url without
respecting the interleave timeouts. It should be corrected.

6. Support for resolving options: global DNS cache and cares library. 

7. Future releases will hopefully incorporate libcurl HYPER API, using 
curl_multi_socket() approach and epoll support by libevent as in
http://curl.haxx.se/lxr/source/hiper/hipev.c Thus, 50000, 100000 clients
from a single process can become a reality.

8. Vlad proposed a management console to enable stopping/adding new
clients in run-time;

9. Another Vlad proposal is a server-side for the loading tool. Apache
server will provide enough performance till a certain load, therefore,
it is worth to create some server-side application usefull for testing
devices in the middle. Thus, server-side statistics may be also become
available to the same management console. Server-side HTTP stack may
be e.g. from libwww.  
