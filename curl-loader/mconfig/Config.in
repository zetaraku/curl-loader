mainmenu "User Configuration"

menu "General Section"


config BATCH_NAME
	string " Batch Name"
	default user_batch
	help
            Batch is a group of clients with the same characteristics and 
            loading behavior. We recommend you to use unique names for your 
            batches, because logfiles and statistics files names are derived
            from the batch name + extension.

config CLIENTS_NUM
	int " Virtual Clients Number"
	default 1
	range 1 2000
	help
	  Number of virtual clients used for loading. This is the maximum number
            to be used. You may wish to start with a lower number and gradually 
            increase you load. This is the place, where the next option "Virtual Clients 
            Number Increment at Startup" comes to your assistance.

config CLIENTS_INITIAL_INC
	int " Virtual Clients Number Increment at Startup"
	default 0
	range 0 2000
	help
	  Specify the number of loading clients to be added each second till the 
            total clients number reaches the number, specified by CLIENTS_NUM.
            Zero number means, that use for loading all CLIENTS_NUM from the 
            very beginning, instead of gradual increase of clients number at loading 
            start.

config INTERFACE
	string " Network Interface for Loading"
	default "eth0"
	help
            Name of the network interface to be used for loading. Run "/sbin/ifconfig" or 
            "ip addr" to figure out the interfaces, that you have.

config IP_ADDR_MIN
	string " Minimal Address of the IP-Range for Loading"
	default "192.168.0.1"
	help
            To run loading you should choose a range of IP-addresses to be used
            by the virtual clients. Pass quad-dotted IPv4 string with the minimal 
            address here. Please, mind that number of IP-addresses in the range 
            (Max - Min) should be equal or more, than the "Virtual Clients Number".
            Thus, every virtual client will have its own IP-address to be used 
            for loading.

config IP_ADDR_MAX
	string " Maximum Address of the IP-Range for Loading"
	default "192.168.0.2"
	help
            To run loading you should choose a range of IP-addresses to be used
            by the virtual clients. Pass quad-dotted IPv4 string with the maximal 
            address here. Please, mind that number of IP-addresses in the range 
            (Max - Min) should be equal or more, than the "Virtual Clients Number".
            Thus, every virtual client will have its own IP-address to be used 
            for loading.

config NETMASK
	string " Netmask of the IP-Range for Loading"
	default "255.255.255.0"
	help
            Ether quad-dotted IPv4 string or number in CIDR notation.

config CYCLES_NUM
	int " Loading Virtual Clients Number"
	default -1
	range -1 10000000
	help
	  Number of loading cycles. (-1) means run load indefinetely (but you can stop
            running your load at any time by Control-C). Zero means don't run (Is it really 
            useful for a loader not to load?).

config USER_AGENT
	string " User Agent for HTTP"
	help
            If not specified, we are taking the default MSIE Explorer 6 string. Skip it if it is OK for you, or if it is not applicable, e.g. FTP.

endmenu


menu "Login Options"

config LOGIN
	bool " Login Enable"
	default n
	help
            Say Y here if you wish to configure virtual clients of the batch to
            make login operations, using username, password, etc parameters.

config LOGIN_CYCLING
	bool " Login Cycling Enable"
	default n
	help
            Say Y here if you wish to configure virtual clients of the batch to
            make login operations not once, but in cycles. Logical to combine
            login cycles with logoff cycles, therefore, if yes, consider Logoff
            Cycling as well.
comment " Login Cycling Enable - support disabled"
	depends on !LOGIN

# LOGIN URL Menu
source ../mconfig/login_url.in

choice
	prompt " Login Request Type"
          default LOGIN_REQ_TYPE_GET_POST
          depends on LOGIN
	help
            HTTP login may be GET with following POST or direct POST.
            Use here either GET+POST or POST options.

config LOGIN_REQ_TYPE_GET_POST
         bool "GET+POST"
config LOGIN_REQ_TYPE_POST
         bool "POST"
config LOGIN_REQ_TYPE_GET
         bool "GET"
endchoice
comment " Login Request Type - support disabled"
	depends on !LOGIN

config LOGIN_CREDENTIALS_FILE
	string " Login Credentials File"
	default ""
          depends on LOGIN
	help
             Fullpath to the credentials file containing credentials lines formatted as 
             userSEPARATORpassword without spaces left. 
             We are supporting separators ':', '@', '/' and ' ' (space), which according to 
             RFC1738 are safe to use between username and password. Only one of the 
             above separators to be used in each file. Note, that when the file with credentials 
             is specified, "Login POST String Matrix" should not contain %d symbols and to 
             be something like  "user=%s&password=%s"

comment "Login Credentials File - support disabled"
	depends on !LOGIN

config LOGIN_POST_STR
	string " Login POST String Matrix - see help"
	default "username=%s%d&password=%s%d"
          depends on LOGIN
	help
            To generate multiple unique users with unique passwords, use the string like
            "username=%s%d&password=%s%d". First '%s' will be substituted by the 
            value of LOGIN_URL_USERNAME tag and '%d' by the client number. Second '%s' will
            be substituted by LOGIN_URL_PASSWORD tag value and second '%d' by the same client
            number. For example, if LOGIN_URL_USERNAME=robert, LOGIN_URL_PASSWORD=stam
            and LOGIN_POST_STR "username=%s%d&password=%s%d", the final POST string, 
            used for the client number 1, will be  "username=robert1&password=stam1".
            In this case LOGIN_URL_USERNAME and LOGIN_URL_PASSWORD strings are used just 
            as base-words for generating unique user credentials by appending an number.
            To use the username and password 'as as', just provide LOGIN_POST_STR without 
            %d symbols, e.g. "user=%s&secret=%s". Thus, all clients will have the same
            POST credentials with the string looking like "user=robert&secret=stam". 
            The option without %d symbols to be used also, when "Login Credentials File" is defined,
            because the credentials uniqueness is ensured by the file content.
            
comment "Login POST String Matrix - support disabled"
	depends on !LOGIN

endmenu



menu "UAS Options"

config UAS
	bool " UAS Enable"
	default n
	help
            Say Y here if you wish to emulate UAS (user activity simulation) by 
            fetching url, sleeping, another url -sleeping cycles, simulating actual user activity.

config UAS_URLS_NUM
	int "Number of UAS URLs"
	default 1
	range 1 100
          depends on UAS
	help
	  Number of UAS (user activity simulation) urls to be used for fetching url, sleeping, 
            fetchng another url, etc
comment " Number of UAS URLs - support disabled"
	depends on !UAS

# UAS URL Menu
source ../mconfig/uas_url.in

endmenu




menu "Logoff Options"

config LOGOFF
	bool " Logoff Enable"
	default n
	help
            Say Y here if you wish to configure virtual clients of the batch to
            make logoff operation.

config LOGOFF_CYCLING
	bool " Logoff Cycling Enable"
	default n
	help
            Say Y here if you wish to configure virtual clients of the batch to
            make logoff operations not once, but in cycles. Logical to combine
            logoff cycles with login cycles, therefore, if yes, consider login
            cycling as well.
comment " Logoff Cycling Enable - support disabled"
	depends on !LOGOFF

# LOGOFF URL Menu
source ../mconfig/logoff_url.in

choice
	prompt " Logoff Request Type"
          default LOGOFF_REQ_TYPE_GET_POST
          depends on LOGOFF
	help
            HTTP logoff may be GET with following POST or POST-only or GET-only.
            Use here either GET+POST or POST or GET options.

config LOGOFF_REQ_TYPE_GET_POST
         bool "GET+POST"
config LOGOFF_REQ_TYPE_POST
         bool "POST"
config LOGOFF_REQ_TYPE_GET
         bool "GET"

endchoice
comment " Logoff Request Type - support disabled"
	depends on !LOGOFF

config LOGOFF_POST_STR
	string " Logoff POST String Matrix - see help"
          depends on LOGOFF
	help
            String to be used for logoff, like "op=logoff"
comment "Logoff POST String Matrix - support disabled"
	depends on !LOGOFF

endmenu



